/*
 * Note: this file originally auto-generated by mib2c using
 *  $
 *
 * $Id:$
 */
#ifndef RS232ASYNCPORTTABLE_ENUMS_H
#define RS232ASYNCPORTTABLE_ENUMS_H

#ifdef __cplusplus
extern "C" {
#endif

 /*
 * NOTES on enums
 * ==============
 *
 * Value Mapping
 * -------------
 * If the values for your data type don't exactly match the
 * possible values defined by the mib, you should map them
 * below. For example, a boolean flag (1/0) is usually represented
 * as a TruthValue in a MIB, which maps to the values (1/2).
 *
 */
/*************************************************************************
 *************************************************************************
 *
 * enum definitions for table rs232AsyncPortTable
 *
 *************************************************************************
 *************************************************************************/

//rachel
/*************************************************************
 * constants for enums for the MIB node
 * rs232AsyncPortBits (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef RS232ASYNCPORTBITS_ENUMS
#define RS232ASYNCPORTBITS_ENUMS

#define RS232ASYNCPORTBITS_SEVEN  7 
#define RS232ASYNCPORTBITS_EIGHT  8 

#endif /* RS232ASYNCPORTBITS_ENUMS */
//rachel

/*************************************************************
 * constants for enums for the MIB node
 * rs232AsyncPortStopBits (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef RS232ASYNCPORTSTOPBITS_ENUMS
#define RS232ASYNCPORTSTOPBITS_ENUMS

#define RS232ASYNCPORTSTOPBITS_ONE  1 
#define RS232ASYNCPORTSTOPBITS_TWO  2 

#endif /* RS232ASYNCPORTSTOPBITS_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * rs232AsyncPortParity (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef RS232ASYNCPORTPARITY_ENUMS
#define RS232ASYNCPORTPARITY_ENUMS

#define RS232ASYNCPORTPARITY_NONE  1 
#define RS232ASYNCPORTPARITY_ODD  2 
#define RS232ASYNCPORTPARITY_EVEN  3 

#endif /* RS232ASYNCPORTPARITY_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * rs232AsyncPortAutobaud (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef RS232ASYNCPORTAUTOBAUD_ENUMS
#define RS232ASYNCPORTAUTOBAUD_ENUMS

#define RS232ASYNCPORTAUTOBAUD_ENABLED  1 
#define RS232ASYNCPORTAUTOBAUD_DISABLED  2 

#endif /* RS232ASYNCPORTAUTOBAUD_ENUMS */




#ifdef __cplusplus
}
#endif

#endif /* RS232ASYNCPORTTABLE_ENUMS_H */
